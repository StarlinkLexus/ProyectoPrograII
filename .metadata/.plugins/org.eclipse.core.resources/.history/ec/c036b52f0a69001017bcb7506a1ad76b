package ProyectoApp2.SistemaBancario;

import javafx.application.Application;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.layout.VBox;
import javafx.stage.Stage;

public class MainView extends Application {
    private Corriente corriente;
    private Cliente cliente;

    @Override
    public void start(Stage primaryStage) {
        TextField montoField = new TextField();
        TextField limiteField = new TextField();
        
        //Botones para crear cuenta, depositar, y retirar
   
        Button crearCuentaButton = new Button("Crear Cuenta Corriente");
        Button depositoButton = new Button("Depositar");
        Button retiroButton = new Button("Retirar");

        //Evento que ocurre cuando se presiona el boton Crear cuenta Corriente
        crearCuentaButton.setOnAction(e -> {
            try {
                double limiteDescubierto = Double.parseDouble(limiteField.getText());
                corriente = new Corriente(1, 0.0, limiteDescubierto); // cuenta 1, saldo en 0
                cliente = new Cliente(100, "Usuario Demo", "0999999999"); //Usuario de prueba
                System.out.println("Cuenta creada exitosamente.");
            } catch (NumberFormatException ex) { //Ayuda capturando errores si el usuario no ingresa numeros validos
                System.out.println("Ingrese un valor numérico válido para el límite.");
            }
        });
        
        //Evento que se ejecuta cuando el usuario presiona el boton Depositar

        depositoButton.setOnAction(e -> {
            try {
                double monto = Double.parseDouble(montoField.getText()); //El texto lo convierte en numero
                if (corriente != null && cliente != null) { //Si la cuenta y usuario existe se hace el deposito
                    corriente.deposito(monto, cliente);
                    System.out.println("Depósito realizado. Nuevo saldo: " + corriente.saldo);
                }
            } catch (NumberFormatException ex) {
                System.out.println("Ingrese un valor numérico válido para el monto.");
            }
        });

        retiroButton.setOnAction(e -> {
        	try {
        	    double monto = Double.parseDouble(montoField.getText());
        	    if (corriente != null && cliente != null) {
        	        corriente.retiro(monto, cliente);
        	        System.out.println("Retiro realizado. Nuevo saldo: " + corriente.saldo);
        	    }
        	} catch (NumberFormatException ex) {
        	    System.out.println("Ingrese un valor numérico válido para el monto.");
        	} catch (RuntimeException ex) {
        	    System.out.println(ex.getMessage());
        	}
        });

        VBox layout = new VBox(10,
                new Label("Límite de Descubierto:"), limiteField,
                crearCuentaButton,
                new Label("Monto:"), montoField,
                depositoButton,
                retiroButton);

        Scene scene = new Scene(layout, 300, 250);
        primaryStage.setScene(scene);
        primaryStage.setTitle("Sistema Bancario");
        primaryStage.show();
    }

    public static void main(String[] args) {
        launch(args);
    }
}
